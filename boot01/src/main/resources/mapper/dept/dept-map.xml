<?xml version="1.0" encoding="UTF-8"?>
<!-- emp-map.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">

	<!-- 전체조회 -->
	<select id="selecEmpAllList" resultType="EmpVO">
	SELECT
	    employee_id,
	    last_name,
	    email,
	    phone_number,
	    hire_date,
	    job_id,
	    salary,
	    commission_pct,
	    manager_id,
	    department_id
	FROM
	    employees
	<!-- Dynamic sql -->
	<where>
		<if test="departmentId > 0">
				OR department_id=#{departmentId}
		</if>
		<if test="jobId != null and !jobId.equals('') ">
				OR job_id=#{jobId}
		</if>
	</where>
	ORDER BY
	    employee_id
	</select>

	<!-- 단건조회 -->
	<select id="selectEmpInfo" parameterType="EmpVO" resultType="EmpVO">
	SELECT
	    employee_id,
	    last_name,
	    email,
	    phone_number,
	    hire_date,
	    job_id,
	    salary,
	    commission_pct,
	    manager_id,
	    department_id
	FROM
	    employees
	WHERE
	    employee_id = #{employeeId}
	<!-- #{} : PreparentStatment => 데이터 타입에 따른 작업 
	     ${} : Statement => 데이터 타입 상관X -->
	</select>

	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
	<selectKey keyProperty="employeeId"
	           resultType="Integer"
	           order="BEFORE">
		SELECT NVL(MAX(employee_id),0) +1
		FROM   employees
	</selectKey>
	INSERT INTO employees
	        (  
	          employee_id
		      , last_name
		      , email
		      , hire_date
	  	      , job_id
	  	      <if test="salary > 0">
	  	      , salary
	  	      </if>
		      
			)
    VALUES (
             #{employeeId}
             , #{lastName}
             , #{email}
             <choose>
             	<when test="hireDate != null ">
	             , #{hireDate}             	
             	</when>
             	<otherwise>
             	 , SYSDATE
             	</otherwise>
             </choose>
             , #{jobId}
             <if test="salary > 0">
             , #{salary}
             </if>
   			)
	</insert>

	<!-- 수정 -->
	<update id="updateEmpInfo">
		UPDATE employees
		SET 
		      last_name = #{emp.lastName}		      
	  	      , job_id = #{emp.jobId}
	  	       <if test="emp.salary > 0">
	  	      , salary = #{emp.salary}
	  	       </if>
	    WHERE  employee_id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		WHERE  employee_id = #{empId}
	</delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!-- emp-map.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">

	<!-- 전체조회 -->
	<select id="selecDeptAllList" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	ORDER BY
	    department_id
	</select>

	<!-- 단건조회 -->
	<select id="selectDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	WHERE
	    department_id = #{departmentId}
	</select>

	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO">
	<selectKey keyProperty="departmentId"
	           resultType="Integer"
	           order="BEFORE">
		SELECT NVL(MAX(department_id),0) +1
		FROM   departments
	</selectKey>
	INSERT INTO departments
	        (  
	            department_id
			    , department_name
			    , manager_id
			    , location_id
		      
			)
    VALUES (
             #{departmentId}
             , #{departmentName}
             , #{managerId}
             , #{locationId}
            
   			)
	</insert>

	<!-- 수정 -->
	<update id="updateDeptInfo">
		UPDATE departments
		SET 
		      department_name = #{dept.departmentName}		      
	  	      , manager_id = #{dept.managerId}
	  	      , location_id = #{dept.locationId}
	    WHERE  department_id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteDeptInfo" parameterType="int">
		DELETE FROM departments
		WHERE  department_id = #{departmentId}
	</delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!-- emp-map.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">

	<!-- 전체조회 -->
	<select id="selecDeptAllList" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	ORDER BY
	    department_id
	</select>

	<!-- 단건조회 -->
	<select id="selectDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	WHERE
	    department_id = #{departmentId}
	</select>

	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO">
	<selectKey keyProperty="departmentId"
	           resultType="Integer"
	           order="BEFORE">
		SELECT NVL(MAX(department_id),0) +1
		FROM   departments
	</selectKey>
	INSERT INTO departments
	        (  
	            department_id
			    , department_name
			    , manager_id
			    , location_id
		      
			)
    VALUES (
             #{departmentId}
             , #{departmentName}
             , #{managerId}
             , #{locationId}
            
   			)
	</insert>

	<!-- 수정 -->
	<update id="updateDeptInfo">
		UPDATE departments
		SET 
		      department_name = #{dept.departmentName}		      
	  	      , manager_id = #{dept.managerId}
	  	      , location_id = #{dept.locationId}
	    WHERE  department_id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteDeptInfo" parameterType="int">
		DELETE FROM departments
		WHERE  department_id = #{departmentId}
	</delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!-- emp-map.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">

	<!-- 전체조회 -->
	<select id="selecDeptAllList" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	ORDER BY
	    department_id
	</select>

	<!-- 단건조회 -->
	<select id="selectDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	WHERE
	    department_id = #{departmentId}
	</select>

	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO">
	<selectKey keyProperty="departmentId"
	           resultType="Integer"
	           order="BEFORE">
		SELECT NVL(MAX(department_id),0) +1
		FROM   departments
	</selectKey>
	INSERT INTO departments
	        (  
	            department_id
			    , department_name
			    , manager_id
			    , location_id
		      
			)
    VALUES (
             #{departmentId}
             , #{departmentName}
             , #{managerId}
             , #{locationId}
            
   			)
	</insert>

	<!-- 수정 -->
	<update id="updateDeptInfo">
		UPDATE departments
		SET 
		      department_name = #{dept.departmentName}		      
	  	      , manager_id = #{dept.managerId}
	  	      , location_id = #{dept.locationId}
	    WHERE  department_id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteDeptInfo" parameterType="int">
		DELETE FROM departments
		WHERE  department_id = #{departmentId}
	</delete>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!-- emp-map.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yedam.app.dept.mapper.DeptMapper">

	<!-- 전체조회 -->
	<select id="selecDeptAllList" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	ORDER BY
	    department_id
	</select>

	<!-- 단건조회 -->
	<select id="selectDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO" resultType="com.yedam.app.dept.service.DeptVO">
	SELECT
	    department_id
	    , department_name
	    , manager_id
	    , location_id
	FROM
	    departments	
	WHERE
	    department_id = #{departmentId}
	</select>

	<!-- 등록 -->
	<insert id="insertDeptInfo" parameterType="com.yedam.app.dept.service.DeptVO">
	<selectKey keyProperty="departmentId"
	           resultType="Integer"
	           order="BEFORE">
		SELECT NVL(MAX(department_id),0) +1
		FROM   departments
	</selectKey>
	INSERT INTO departments
	        (  
	            department_id
			    , department_name
			    , manager_id
			    , location_id
		      
			)
    VALUES (
             #{departmentId}
             , #{departmentName}
             , #{managerId}
             , #{locationId}
            
   			)
	</insert>

	<!-- 수정 -->
	<update id="updateDeptInfo">
		UPDATE departments
		SET 
		      department_name = #{dept.departmentName}		      
	  	      , manager_id = #{dept.managerId}
	  	      , location_id = #{dept.locationId}
	    WHERE  department_id = #{id}
	</update>

	<!-- 삭제 -->
	<delete id="deleteDeptInfo" parameterType="int">
		DELETE FROM departments
		WHERE  department_id = #{departmentId}
	</delete>

</mapper>